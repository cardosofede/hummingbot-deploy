version: "3.9"

services:
  dashboard:
    image: dardonacci/dashboard:latest
    ports:
      - "127.0.0.1:8502:8501"
    environment:
        - BACKEND_API_HOST=backend-api
        - BACKEND_API_PORT=8000
  backend-api:
    image: dardonacci/backend-api:latest
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./bots/archived:/backend-api/bots/archived
      - ./bots/conf:/backend-api/bots/conf
      - ./bots/credentials:/backend-api/bots/credentials
      - ./bots/instances:/backend-api/bots/instances
      - ./bots/scripts:/backend-api/bots/scripts
      - ./bots/controllers:/backend-api/bots/controllers
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      - BROKER_HOST=emqx
      - BROKER_PORT=1883
  emqx:
    image: emqx:5
    restart: unless-stopped
    environment:
      - EMQX_NAME=emqx
      - EMQX_HOST=0.0.0.0
      - EMQX_CLUSTER__DISCOVERY_STRATEGY=static
      - EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.local]
      - EMQX_LOADED_PLUGINS="emqx_recon,emqx_retainer,emqx_management,emqx_dashboard"
    volumes:
      - emqx-data:/opt/emqx/data
      - emqx-log:/opt/emqx/log
      - emqx-etc:/opt/emqx/etc
    ports:
      - "127.0.0.1:1883:1883"  # mqtt:tcp
      - "127.0.0.1:8883:8883"  # mqtt:tcp:ssl
      - "127.0.0.1:8083:8083"  # mqtt:ws
      - "127.0.0.1:8084:8084"  # mqtt:ws:ssl
      - "127.0.0.1:8081:8081"  # http:management
      - "127.0.0.1:18083:18083"  # http:dashboard
      - "127.0.0.1:61613:61613"  # web-stomp gateway
    healthcheck:
      test: [ "CMD", "/opt/emqx/bin/emqx_ctl", "status" ]
      interval: 5s
      timeout: 25s
      retries: 5

volumes:
  emqx-data: { }
  emqx-log: { }
  emqx-etc: { }
